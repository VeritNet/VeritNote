/* --- 1. 设计系统 & 全局样式 --- */
:root {
    /* 颜色 */
    --bg-primary: rgb(25,25,25); /* 主背景 (深灰) */
    --bg-secondary: #252526; /* 侧边栏/弹出菜单背景 */
    --bg-tertiary: #333333; /* 悬停/活动状态背景 */
    --bg-accent: #3a3d41; /* 突出背景，如输入框 */

    --text-primary: #cccccc; /* 主要文字 (浅灰) */
    --text-secondary: #8c8c8c; /* 次要文字/占位符 */
    --text-accent: #569cd6; /* 链接/高亮文字 (蓝色) */
    --text-on-accent-bg: #ffffff;
    --border-color: #444444; /* 边框颜色 */
    --shadow-color: rgba(0, 0, 0, 0.5);
    /* 字体 */
    --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    --font-family-monospace: "Courier New", Courier, monospace;
    /* 间距 */
    --spacing-xs: 4px;
    --spacing-s: 8px;
    --spacing-m: 16px;
    --spacing-l: 24px;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: var(--font-family);
    background-color: var(--bg-primary);
    color: var(--text-primary);
    font-size: 16px;
    line-height: 1.6;
    overflow: hidden; /* 防止body滚动 */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/* --- 2. 整体布局 --- */
.app-container {
    display: flex;
    height: 100vh;
    /* NEW: Add transition for main content margin */
    transition: grid-template-columns 0.3s ease;
}

#sidebar {
    width: 260px;
    flex-shrink: 0;
    background-color: var(--bg-secondary);
    border-right: 1px solid var(--border-color);
    display: flex;
    flex-direction: column;
    transition: width 0.3s ease, transform 0.3s ease, min-width 0.3s ease;
    will-change: width, transform;
    position: relative;
    z-index: 50; /* Ensure sidebar is on top */
}

/* --- NEW: Collapsed State --- */
.sidebar-collapsed #sidebar {
    width: 0;
    min-width: 0; /* Important for shrinking */
    border-right: none;
    transform: translateX(-100%);
    padding: 0;
}

.sidebar-collapsed #main-content {
    /* Main content takes full width when collapsed */
}

/* --- NEW: Temporary Hover-to-Show State --- */
.sidebar-collapsed.sidebar-peek #sidebar {
    width: 260px;
    min-width: 260px;
    transform: translateX(0);
    border-right: 1px solid var(--border-color);
    box-shadow: 5px 0 15px rgba(0,0,0,0.2);
}

    .sidebar-collapsed.sidebar-peek #sidebar .sidebar-header,
    .sidebar-collapsed.sidebar-peek #sidebar .workspace-tree,
    .sidebar-collapsed.sidebar-peek #sidebar .sidebar-footer {
        opacity: 1;
        transition: opacity 0.2s ease 0.1s;
    }

/* --- 新增: 侧边栏悬浮触发器样式 --- */
#sidebar-peek-trigger {
    position: fixed; /* 固定在视口上 */
    top: 0;
    left: 0;
    width: 10px; /* 触发区域的宽度 */
    height: 100vh; /* 触发区域的高度 (整个屏幕高) */
    z-index: 100; /* 确保它在最上层，能接收鼠标事件 */
    /* background: rgba(255, 0, 0, 0.2); */ /* 取消注释此行以进行调试，您会看到一个红色区域 */
}

/* 当侧边栏展开时，我们不需要这个触发器 */
.app-container:not(.sidebar-collapsed) ~ #sidebar-peek-trigger {
    display: none;
}


#main-content {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    /* NEW: Add transition */
    transition: margin-left 0.3s ease;
}

/* --- 3. 侧边栏样式 --- */
.sidebar-header {
    padding: var(--spacing-m);
    border-bottom: 1px solid var(--border-color);
    flex-shrink: 0;
}

    .sidebar-header h3 {
        font-size: 18px;
        font-weight: 600;
    }

.workspace-tree {
    padding: var(--spacing-s);
    overflow-y: auto;
    flex-grow: 1;
}

.loading-placeholder, .empty-workspace {
    color: var(--text-secondary);
    padding: var(--spacing-s);
    font-style: italic;
}

.tree-node {
    padding: var(--spacing-xs) var(--spacing-s);
    border-radius: 4px;
    cursor: pointer;
    display: flex;
    align-items: center;
    user-select: none;
    transition: background-color 0.2s ease;
}

    .tree-node:hover {
        background-color: var(--bg-tertiary);
    }

    .tree-node.active {
        background-color: var(--text-accent);
        color: var(--text-on-accent-bg);
    }

    .tree-node .icon {
        margin-right: var(--spacing-s);
        width: 16px;
        height: 16px;
        text-align: center;
    }

    .tree-node.folder > .icon::before {
        content: '▶';
        font-size: 10px;
        display: inline-block;
        transition: transform 0.2s ease;
    }

    .tree-node.folder.open > .icon::before {
        transform: rotate(90deg);
    }

    .tree-node.page > .icon::before {
        content: '📄';
        font-size: 12px;
    }

.tree-node-children {
    padding-left: var(--spacing-m);
}


.sidebar-footer {
    padding: var(--spacing-s);
    border-top: 1px solid var(--border-color);
    display: flex; /* NEW */
    flex-direction: column; /* NEW */
    gap: var(--spacing-s); /* NEW */
}

.sidebar-footer-btn {
    width: 100%;
    background: none;
    border: none;
    color: var(--text-secondary);
    padding: var(--spacing-s);
    border-radius: 4px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: var(--spacing-s);
    font-size: 14px;
    text-align: left;
}

    .sidebar-footer-btn:hover {
        background-color: var(--bg-tertiary);
        color: var(--text-primary);
    }

/* When sidebar is collapsed, hide text content */
.sidebar-collapsed .sidebar-header,
.sidebar-collapsed .workspace-tree,
.sidebar-collapsed .sidebar-footer {
    opacity: 0;
    transition: opacity 0.1s ease;
}


button {
    background-color: var(--bg-accent);
    color: var(--text-primary);
    border: 1px solid var(--border-color);
    padding: var(--spacing-s) var(--spacing-m);
    border-radius: 4px;
    cursor: pointer;
    font-family: inherit;
    font-size: 14px;
    transition: background-color 0.2s ease, color 0.2s ease;
    width: 100%;
}

    button:hover {
        background-color: var(--bg-tertiary);
    }

    button.active {
        background-color: var(--text-accent);
        color: var(--text-on-accent-bg);
        border-color: var(--text-accent);
    }

/* --- 4. 主内容区 & 编辑器样式 --- */
.editor-toolbar {
    display: flex;
    /* 移除 justify-content，让元素自然靠左 */
    align-items: center;
    padding: var(--spacing-s) var(--spacing-l);
    border-bottom: 1px solid var(--border-color);
    flex-shrink: 0;
    gap: var(--spacing-m);
}

.toolbar-left, .toolbar-right {
    display: flex;
    align-items: center;
    gap: var(--spacing-m); /* 调整左侧元素间距 */
}

#current-page-path {
    font-size: 14px;
    color: var(--text-secondary);
    white-space: nowrap; /* 防止路径换行 */
}

.toolbar-right .mode-switcher {
    display: flex;
}

.mode-switcher button {
    width: auto;
    margin-left: var(--spacing-s);
}

.mode-switcher {
    margin-left: auto; /* 关键！这个属性会占据所有可用空间，把它自己推到最右边 */
    display: flex; /* 确保内部按钮水平排列 */
}

#back-to-dashboard-btn {
    width: auto;
    padding: 4px 10px;
    font-size: 20px;
    line-height: 1;
}

.icon-btn-editor {
    width: auto;
    padding: var(--spacing-xs) var(--spacing-s);
    background: none;
    border: none;
    color: var(--text-secondary);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    cursor: pointer; /* Ensure cursor is pointer */
}

    .icon-btn-editor:hover {
        background-color: var(--bg-tertiary);
        color: var(--text-primary);
    }

.editor-view {
    flex-grow: 1;
    overflow-y: auto;
    padding: var(--spacing-m) var(--spacing-l);
    max-width: 900px;
    margin: 0 auto;
    width: 100%;
}

/* ==========================================================================
   5. Block 核心样式 (Core Block Styles)
   ========================================================================== */

/* --- 5.1. 基础 Block 容器 (Base Container) --- */

.block-container {
    position: relative;
    padding-left: 36px; /* 为左侧控件留出空间 */
    margin-bottom: var(--spacing-xs);
    display: flex;
    flex-direction: column;
}

/* --- 5.2. Block 交互控件 (Controls) --- */
.block-controls {
    position: absolute;
    top: 2px;
    left: 4px;
    display: flex;
    align-items: center;
    opacity: 0;
    transition: opacity 0.2s ease;
    z-index: 10;
}

.block-container:hover > .block-controls {
    opacity: 1;
}

.drag-handle, .delete-btn {
    color: var(--text-secondary);
    cursor: pointer;
    padding: 4px;
    z-index: 2; /* 层级高于工具栏背景 */
}

.drag-handle {
    cursor: grab;
}

    .drag-handle:active {
        cursor: grabbing;
    }

.delete-btn:hover {
    color: #f44336;
}


/* --- 5.3. Block 内容区域 (Content Area) --- */

.block-content {
    outline: none;
    min-height: 26px; /* 约等于一行的高度 */
    width: 100%;
    padding: 2px 0;
    overflow-wrap: break-word;
    word-break: break-word;
}

.block-structural {
    padding: 0 !important; /* 结构块本身不应该有内边距 */
}

/* --- 5.4. 拖拽指示器与反馈 (Drag & Drop Indicators) --- */

.drop-indicator {
    position: absolute;
    height: 2px;
    background-color: var(--text-accent);
    pointer-events: none;
    z-index: 100;
}

.drop-indicator-vertical {
    position: absolute;
    top: 0;
    width: 2px;
    background-color: var(--text-accent);
    pointer-events: none;
    z-index: 100;
}

.block-container.drag-over-inside > .block-content {
    background-color: var(--bg-accent) !important;
}

.block-container:hover > .block-content {
    background-color: rgba(58, 61, 65, 0.5) !important; /* 使用一个更微妙的背景色 */
}

/* 【新增】连接桥/保护区伪元素 */
.block-container.toolbar-active::after {
    content: '';
    position: absolute;
    /* 定位在块的顶部，向上延伸 */
    bottom: 100%;
    left: 0;
    right: 0;
    /* 高度就是我们工具栏和块之间的间隙大小 */
    height: 10px;
    /* 背景色设为透明，以便调试时可以设为半透明红色来观察区域 */
    background-color: transparent;
    /* pointer-events 默认为 auto，所以它可以捕获鼠标事件 */
}


/* ==========================================================================
   6. 特定 Block 类型样式 (Specific Block Type Styles)
   ========================================================================== */

/* --- 6.1. 文本与标题 (Text & Headings) --- */

.block-content[data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: var(--text-secondary);
    cursor: text;
    pointer-events: none;
    /* By default, it's hidden */
    display: none;
}

.block-content[data-placeholder]:empty:focus::before {
    /* Only display it when the element is empty AND has focus */
    display: inline;
}

.block-content[data-type="heading1"] {
    font-size: 2.5em;
    font-weight: 800;
    line-height: 1.2;
    margin-top: 1em;
    margin-bottom: 0.5em;
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 0.3em;
}

.block-content[data-type="heading2"] {
    font-size: 1.8em;
    font-weight: 700;
    line-height: 1.3;
    margin-top: 0.8em;
    margin-bottom: 0.4em;
}

.block-content[data-type="paragraph"] {
    /* 默认样式，无需特殊设置 */
}


/* --- 6.2. 媒体与链接 (Media & Links) --- */

a {
    color: var(--text-accent);
    text-decoration: none;
}

    a:hover {
        text-decoration: underline;
    }

.block-content[data-type="image"] img {
    max-width: 100%;
    border-radius: 4px;
}

.image-placeholder {
    width: 100%;
    background: var(--bg-accent);
    border: 2px dashed var(--border-color);
    padding: var(--spacing-l);
    text-align: center;
    color: var(--text-secondary);
    border-radius: 4px;
    cursor: pointer;
}

.block-content[data-type="linkButton"] a {
    display: inline-block;
    background-color: var(--bg-accent);
    border: 1px solid var(--border-color);
    padding: var(--spacing-s) var(--spacing-m);
    border-radius: 4px;
    text-decoration: none;
    transition: background-color 0.2s ease;
}

    .block-content[data-type="linkButton"] a:hover {
        background-color: var(--bg-tertiary);
    }


/* --- 6.3. 容器类 Block (Container Blocks) --- */

/* 6.3.1. Callout Block (标注块) */

.block-content[data-type="callout"] {
    /* 【修复】所有视觉样式都在这个顶级容器上 */
    background-color: rgba(86, 156, 214, 0.1);
    border: 1px solid rgba(86, 156, 214, 0.2);
    border-radius: 4px;
    padding: var(--spacing-m);
    display: flex;
    position: relative;
    padding-bottom: 32px; /* 底部留白 */
    min-height: 50px; /* 确保空 callout 可交互 */
}

.callout-icon {
    margin-right: var(--spacing-s);
    font-size: 1.2em;
    user-select: none;
}

.callout-content-wrapper {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    /* 【修复】强制换行的关键 */
    min-width: 0;
}


/* 6.3.2. Columns Layout (列布局) */

.block-content[data-type="columns"] {
    display: flex;
    width: 100%;
    /* 【修复】使用 padding 代替 gap 来避免溢出 */
    margin: 0 calc(var(--spacing-m) / -2);
}

.block-content[data-type="column"] {
    min-width: 80px;
    flex-shrink: 0;
    /* 【修复】列之间的间距由 padding 提供 */
    padding: 0 calc(var(--spacing-m) / 2);
    position: relative;
    padding-bottom: 24px;
    min-height: 40px;
}

.column-resizer {
    width: var(--spacing-m);
    /* 调整 margin 让其在 padding 区域居中 */
    margin: 0 calc(var(--spacing-m) / -2);
    cursor: col-resize;
    z-index: 10;
    position: relative;
    flex-shrink: 0;
}

    .column-resizer:hover::after {
        content: '';
        position: absolute;
        left: calc(50% - 1px);
        top: 0;
        bottom: 0;
        width: 2px;
        background-color: var(--text-accent);
    }

/* --- 7. "/" 命令菜单样式 (NEW & IMPROVED) --- */
.command-menu {
    position: absolute;
    width: 320px;
    border-radius: 8px; /* Slightly larger radius */
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
    z-index: 1000;
    overflow: hidden; /* Important for border-radius on children */
    /* --- Glassmorphism Effect --- */
    background: rgba(45, 45, 45, 0.75); /* Semi-transparent background */
    backdrop-filter: blur(12px) saturate(180%); /* The core of the glass effect */
    -webkit-backdrop-filter: blur(12px) saturate(180%);
    border: 1px solid rgba(255, 255, 255, 0.18);
}

.command-menu-title {
    padding: var(--spacing-s) var(--spacing-m);
    font-size: 12px;
    font-weight: 600;
    color: var(--text-secondary);
    text-transform: uppercase;
}

.command-menu-list {
    /* --- Scrollable Area --- */
    max-height: 300px; /* Limit the height, this enables scrolling */
    overflow-y: auto;
    padding: 0 var(--spacing-xs) var(--spacing-xs) var(--spacing-xs); /* Padding for the list itself */
}

.command-item {
    display: flex;
    align-items: center;
    padding: var(--spacing-s);
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

    /* Use a more subtle hover effect for glass UI */
    .command-item:hover, .command-item.selected {
        background-color: rgba(255, 255, 255, 0.1);
    }

.command-item-icon {
    font-size: 20px;
    width: 36px;
    height: 36px;
    flex-shrink: 0;
    margin-right: var(--spacing-m);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    background-color: rgba(255, 255, 255, 0.05);
}

.command-item-text {
    display: flex;
    flex-direction: column;
}

    .command-item-text strong {
        font-weight: 500;
        color: var(--text-primary);
        line-height: 1.2;
    }

    .command-item-text small {
        color: var(--text-secondary);
        font-size: 12px;
        line-height: 1.2;
    }


/* --- 8. 预览模式样式 --- */
#preview {
    line-height: 1.7;
}

    #preview h1, #preview h2, #preview h3 {
        margin-top: 1.5em;
        margin-bottom: 0.5em;
    }

    #preview h1 {
        font-size: 2.5em;
        font-weight: 800;
        border-bottom: 1px solid var(--border-color);
        padding-bottom: 0.3em;
    }

    #preview h2 {
        font-size: 1.8em;
        font-weight: 700;
    }

/* --- 9. 自定义滚动条 --- */
::-webkit-scrollbar {
    width: 14px; /* Width of the entire scrollbar */
    height: 14px; /* Height for horizontal scrollbar */
}

::-webkit-scrollbar-track {
    background: transparent; /* Make the track invisible */
}

::-webkit-scrollbar-thumb {
    background-color: var(--bg-accent); /* Color of the handle */
    border-radius: 10px; /* Fully rounded handle */
    /* Create a "padding" effect around the handle */
    border: 4px solid var(--bg-primary);
}

    ::-webkit-scrollbar-thumb:hover {
        background-color: #555; /* Lighter on hover */
        border-color: var(--bg-secondary); /* Match sidebar bg on hover */
    }

/* For sidebar, a slightly different track color */
#sidebar ::-webkit-scrollbar-track {
    background-color: var(--bg-secondary);
}

#sidebar ::-webkit-scrollbar-thumb {
    border-color: var(--bg-secondary);
}


/* ==========================================================================
   10. 交互式浮动元素 (Interactive Overlays)
   ========================================================================== */

/* --- 10.1. 右键上下文菜单 (Context Menu) --- */
.context-menu {
    position: absolute;
    background-color: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    box-shadow: 0 4px 12px var(--shadow-color);
    padding: var(--spacing-xs);
    width: 180px;
    z-index: 2000;
    user-select: none;
}

.context-menu-item {
    padding: var(--spacing-s) var(--spacing-m);
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.2s ease;
}

    .context-menu-item:hover {
        background-color: var(--bg-tertiary);
    }

    .context-menu-item.danger:hover {
        background-color: #5c2323;
        color: #ff8a8a;
    }

    .context-menu-item.separator {
        height: 1px;
        background-color: var(--border-color);
        margin: var(--spacing-xs) 0;
        padding: 0;
    }

/* --- 10.2. 导出遮罩层 (Export Overlay) --- */
.export-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(5px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 3000;
}

.export-modal {
    background-color: var(--bg-secondary);
    padding: var(--spacing-l);
    border-radius: 8px;
    box-shadow: 0 8px 24px var(--shadow-color);
    width: 400px;
    text-align: center;
}

    .export-modal h3 {
        margin-bottom: var(--spacing-m);
    }

.progress-bar-container {
    width: 100%;
    height: 8px;
    background-color: var(--bg-accent);
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: var(--spacing-s);
}

.progress-bar {
    width: 0%;
    height: 100%;
    background-color: var(--text-accent);
    transition: width 0.2s ease;
}

#export-status {
    font-size: 14px;
    color: var(--text-secondary);
}


/* ==========================================================================
   11. 悬浮工具栏与弹出框 (Floating Toolbar & Popovers)
   ========================================================================== */

/* --- 11.1. 悬浮块操作工具栏 (Block Toolbar) --- */

.toolbar-button {
    background: none;
    border: none;
    color: var(--text-primary);
    padding: var(--spacing-xs) var(--spacing-s);
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px; /* Adjust font size for text buttons */
    line-height: 1.2; /* Adjust line height */
    transition: background-color 0.2s ease;
    display: flex; /* Use flexbox for alignment */
    align-items: center;
    gap: var(--spacing-xs); /* Space between icon and text */
}

    .toolbar-button:hover {
        background-color: var(--bg-tertiary);
    }

    .toolbar-button.active {
        background-color: var(--text-accent);
        color: var(--text-on-accent-bg);
    }

.toolbar-separator {
    width: 1px;
    height: 16px;
    background-color: var(--border-color);
    margin: 0 var(--spacing-xs);
}

#block-toolbar { /* 【恢复】使用 ID 选择器 */
    position: absolute; /* 【恢复】绝对定位 */
    display: flex;
    align-items: center;
    background-color: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    box-shadow: 0 4px 12px var(--shadow-color);
    padding: var(--spacing-xs);
    z-index: 1000;
}

/* NEW: Styles for the language selector button in the toolbar */
.toolbar-lang-icon {
    display: inline-block;
    width: 16px;
    height: 16px;
    background-color: currentColor; /* Inherit color from the button text */
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='16 18 22 12 16 6'%3E%3C/polyline%3E%3Cpolyline points='8 6 2 12 8 18'%3E%3C/polyline%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='16 18 22 12 16 6'%3E%3C/polyline%3E%3Cpolyline points='8 6 2 12 8 18'%3E%3C/polyline%3E%3C/svg%3E");
    background-size: contain;
}


/* --- 11.2. 通用弹出框 (Popover) --- */
.popover {
    position: absolute;
    background-color: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    box-shadow: 0 4px 12px var(--shadow-color);
    z-index: 1001;
    width: 320px;
}

.popover-content {
    padding: var(--spacing-s);
}

#popover-input {
    width: 100%;
    background-color: var(--bg-accent);
    border: 1px solid var(--border-color);
    color: var(--text-primary);
    border-radius: 4px;
    padding: var(--spacing-s);
    outline: none;
    box-sizing: border-box;
}

    #popover-input:focus {
        border-color: var(--text-accent);
    }

.popover-button {
    width: 100%;
    margin-top: var(--spacing-s);
    padding: var(--spacing-s);
    background-color: var(--bg-accent);
    color: var(--text-primary);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    font-family: inherit;
    font-size: 14px;
    cursor: pointer;
    text-align: center;
    transition: background-color 0.2s ease;
}

    .popover-button:hover {
        background-color: var(--bg-tertiary);
    }

.popover-search-results {
    max-height: 150px;
    overflow-y: auto;
    margin-top: var(--spacing-s);
}

.search-result-item {
    padding: var(--spacing-s);
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

    .search-result-item:hover {
        background-color: var(--bg-tertiary);
    }

/* 11.2.1. 颜色选择器 */
#popover-color-picker {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: var(--spacing-s);
    margin-top: var(--spacing-s);
}

.color-swatch {
    width: 100%;
    height: 28px;
    border-radius: 4px;
    cursor: pointer;
    border: 2px solid transparent;
}

    .color-swatch:hover {
        border-color: var(--text-primary);
    }